{"sprites": [{"name": "Stage", "isStage": true, "scripts": [], "comments": [], "currentCostume": 0, "costumes": [], "sounds": [], "volume": 100}, {"name": "Sprite1", "isStage": false, "scripts": [{"position": [0, 0], "blocks": [{"opcode": "when green flag clicked", "inputs": {}, "options": {}}, {"opcode": "set [VARIABLE] to (VALUE)", "inputs": {"VALUE": {"text": "[\"imp\", \"inx\", \"   \", \"   \", \"   \", \"zp\",  \"zp\",  \"   \", \"imp\", \"imm\", \"acc\", \"   \", \"   \", \"abs\", \"abs\", \"   \", \"rel\", \"iny\", \"   \", \"   \", \"   \", \"zpx\", \"zpx\", \"   \", \"imp\", \"aby\", \"   \", \"   \", \"   \", \"abx\", \"abx\", \"   \", \"abs\", \"inx\", \"   \", \"   \", \"zp\",  \"zp\",  \"zp\",  \"   \", \"imp\", \"imm\", \"acc\", \"   \", \"abs\", \"abs\", \"abs\", \"   \", \"rel\", \"iny\", \"   \", \"   \", \"   \", \"zpx\", \"zpx\", \"   \", \"imp\", \"aby\", \"   \", \"   \", \"   \", \"abx\", \"abx\", \"   \", \"imp\", \"inx\", \"   \", \"   \", \"   \", \"zp\",  \"zp\",  \"   \", \"imp\", \"imm\", \"acc\", \"   \", \"abs\", \"abs\", \"abs\", \"   \", \"rel\", \"iny\", \"   \", \"   \", \"   \", \"zpx\", \"zpx\", \"   \", \"imp\", \"aby\", \"   \", \"   \", \"   \", \"abx\", \"abx\", \"   \", \"imp\", \"inx\", \"   \", \"   \", \"   \", \"zp\",  \"zp\",  \"   \", \"imp\", \"imm\", \"acc\", \"   \", \"ind\", \"abs\", \"abs\", \"   \", \"rel\", \"iny\", \"   \", \"   \", \"   \", \"zpx\", \"zpx\", \"   \", \"imp\", \"aby\", \"   \", \"   \", \"   \", \"abx\", \"abx\", \"   \", \"   \", \"inx\", \"   \", \"   \", \"zp\",  \"zp\",  \"zp\",  \"   \", \"imp\", \"   \", \"imp\", \"   \", \"abs\", \"abs\", \"abs\", \"   \", \"rel\", \"iny\", \"   \", \"   \", \"zpx\", \"zpx\", \"zpy\", \"   \", \"imp\", \"aby\", \"imp\", \"   \", \"   \", \"abx\", \"   \", \"   \", \"imm\", \"inx\", \"imm\", \"   \", \"zp\",  \"zp\",  \"zp\",  \"   \", \"imp\", \"imm\", \"imp\", \"   \", \"abs\", \"abs\", \"abs\", \"   \", \"rel\", \"iny\", \"   \", \"   \", \"zpx\", \"zpx\", \"zpy\", \"   \", \"imp\", \"aby\", \"imp\", \"   \", \"abx\", \"abx\", \"aby\", \"   \", \"imm\", \"inx\", \"   \", \"   \", \"zp\",  \"zp\",  \"zp\",  \"   \", \"imp\", \"imm\", \"imp\", \"   \", \"abs\", \"abs\", \"abs\", \"   \", \"rel\", \"iny\", \"   \", \"   \", \"   \", \"zpx\", \"zpx\", \"   \", \"imp\", \"aby\", \"   \", \"   \", \"   \", \"abx\", \"abx\", \"   \", \"imm\", \"inx\", \"   \", \"   \", \"zp\",  \"zp\",  \"zp\",  \"   \", \"imp\", \"imm\", \"imp\", \"   \", \"abs\", \"abs\", \"abs\", \"   \", \"rel\", \"iny\", \"   \", \"   \", \"   \", \"zpx\", \"zpx\", \"   \", \"imp\", \"aby\", \"   \", \"   \", \"   \", \"abx\", \"abx\", \"   \"]"}}, "options": {"VARIABLE": ["variable", "ADDRESSING"]}}, {"opcode": "set [VARIABLE] to (VALUE)", "inputs": {"VALUE": {"text": "[\"brk\", \"ora\", \"   \", \"   \", \"   \", \"ora\", \"asl\", \"   \", \"php\", \"ora\", \"asl\", \"   \", \"   \", \"ora\", \"asl\", \"   \", \"bpl\", \"ora\", \"   \", \"   \", \"   \", \"ora\", \"asl\", \"   \", \"clc\", \"ora\", \"   \", \"   \", \"   \", \"ora\", \"asl\", \"   \", \"jsr\", \"and\", \"   \", \"   \", \"bit\", \"and\", \"rol\", \"   \", \"plp\", \"and\", \"rol\", \"   \", \"bit\", \"and\", \"rol\", \"   \", \"bmi\", \"and\", \"   \", \"   \", \"   \", \"and\", \"rol\", \"   \", \"sec\", \"and\", \"   \", \"   \", \"   \", \"and\", \"rol\", \"   \", \"rti\", \"eor\", \"   \", \"   \", \"   \", \"eor\", \"lsr\", \"   \", \"pha\", \"eor\", \"lsr\", \"   \", \"jmp\", \"eor\", \"lsr\", \"   \", \"bvc\", \"eor\", \"   \", \"   \", \"   \", \"eor\", \"lsr\", \"   \", \"cli\", \"eor\", \"   \", \"   \", \"   \", \"eor\", \"lsr\", \"   \", \"rts\", \"adc\", \"   \", \"   \", \"   \", \"adc\", \"ror\", \"   \", \"pla\", \"adc\", \"ror\", \"   \", \"jmp\", \"adc\", \"ror\", \"   \", \"bvs\", \"adc\", \"   \", \"   \", \"   \", \"adc\", \"ror\", \"   \", \"sei\", \"adc\", \"   \", \"   \", \"   \", \"adc\", \"ror\", \"   \", \"   \", \"sta\", \"   \", \"   \", \"sty\", \"sta\", \"stx\", \"   \", \"dey\", \"   \", \"txa\", \"   \", \"sty\", \"sta\", \"stx\", \"   \", \"bcc\", \"sta\", \"   \", \"   \", \"sty\", \"sta\", \"stx\", \"   \", \"tya\", \"sta\", \"txs\", \"   \", \"   \", \"sta\", \"   \", \"   \", \"ldy\", \"lda\", \"ldx\", \"   \", \"ldy\", \"lda\", \"ldx\", \"   \", \"tay\", \"lda\", \"tax\", \"   \", \"ldy\", \"lda\", \"ldx\", \"   \", \"bcs\", \"lda\", \"   \", \"   \", \"ldy\", \"lda\", \"ldx\", \"   \", \"clv\", \"lda\", \"tsx\", \"   \", \"ldy\", \"lda\", \"ldx\", \"   \", \"cpy\", \"cmp\", \"   \", \"   \", \"cpy\", \"cmp\", \"dec\", \"   \", \"iny\", \"cmp\", \"dex\", \"   \", \"cpy\", \"cmp\", \"dec\", \"   \", \"bne\", \"cmp\", \"   \", \"   \", \"   \", \"cmp\", \"dec\", \"   \", \"cld\", \"cmp\", \"   \", \"   \", \"   \", \"cmp\", \"dec\", \"   \", \"cpx\", \"sbc\", \"   \", \"   \", \"cpx\", \"sbc\", \"inc\", \"   \", \"inx\", \"sbc\", \"nop\", \"   \", \"cpx\", \"sbc\", \"inc\", \"   \", \"beq\", \"sbc\", \"   \", \"   \", \"   \", \"sbc\", \"inc\", \"   \", \"sed\", \"sbc\", \"   \", \"   \", \"   \", \"sbc\", \"inc\", \"   \"]"}}, "options": {"VARIABLE": ["variable", "OPCODES"]}}, {"opcode": "set [VARIABLE] to (VALUE)", "inputs": {"VALUE": {"text": "little"}}, "options": {"VARIABLE": ["variable", "BYTEORDER"]}}, {"opcode": "set [VARIABLE] to (VALUE)", "inputs": {"VALUE": {"block": {"opcode": "false", "inputs": {}, "options": {}}}}, "options": {"VARIABLE": ["variable", "PAGE_WRAPPING_BUG"]}}]}, {"position": [0, 1000], "blocks": [{"opcode": "define custom block", "inputs": {}, "options": {"noScreenRefresh": ["value", true], "customOpcode": ["value", "set (var). (key)to (value)"], "blockType": ["value", "instruction"]}}, {"opcode": "set runtime var (VARIABLE) to (VALUE)", "inputs": {"VARIABLE": {"block": {"opcode": "value of text [ARGUMENT]", "inputs": {}, "options": {"ARGUMENT": ["value", "var"]}}}, "VALUE": {"block": {"opcode": "set (KEY) to (VALUE) in (JSON)", "inputs": {"KEY": {"block": {"opcode": "value of text [ARGUMENT]", "inputs": {}, "options": {"ARGUMENT": ["value", "key"]}}}, "VALUE": {"block": {"opcode": "value of text [ARGUMENT]", "inputs": {}, "options": {"ARGUMENT": ["value", "value"]}}}, "JSON": {"block": {"opcode": "runtime var (VARIABLE)", "inputs": {"VARIABLE": {"block": {"opcode": "value of text [ARGUMENT]", "inputs": {}, "options": {"ARGUMENT": ["value", "var"]}}}}, "options": {}}}}, "options": {}}}}, "options": {}}]}, {"position": [0, 2000], "blocks": [{"opcode": "define custom block", "inputs": {}, "options": {"noScreenRefresh": ["value", true], "customOpcode": ["value", "P___init__ (memory)"], "blockType": ["value", "textReporter"]}, "comment": {"position": [400, 2000], "size": [200, 80], "isMinimized": false, "text": "Initialize the processor."}}, {"opcode": "set runtime var (VARIABLE) to (VALUE)", "inputs": {"VARIABLE": {"text": "self"}, "VALUE": {"text": "{}"}}, "options": {}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "memory"}, "value": {"block": {"opcode": "value of text [ARGUMENT]", "inputs": {}, "options": {"ARGUMENT": ["value", "memory"]}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "reg_a"}, "value": {"text": "0"}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "reg_y"}, "value": {"text": "0"}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "reg_x"}, "value": {"text": "0"}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "program_counter"}, "value": {"text": "0"}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "stack_pointer"}, "value": {"text": "0"}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "instructions"}, "value": {"text": "0"}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "flag_c"}, "value": {"block": {"opcode": "true", "inputs": {}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "flag_z"}, "value": {"block": {"opcode": "true", "inputs": {}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "flag_i"}, "value": {"block": {"opcode": "true", "inputs": {}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "flag_d"}, "value": {"block": {"opcode": "true", "inputs": {}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "flag_b"}, "value": {"block": {"opcode": "true", "inputs": {}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "flag_v"}, "value": {"block": {"opcode": "true", "inputs": {}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "flag_n"}, "value": {"block": {"opcode": "true", "inputs": {}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}, {"opcode": "return (VALUE)", "inputs": {"VALUE": {"block": {"opcode": "runtime var (VARIABLE)", "inputs": {"VARIABLE": {"text": "self"}}, "options": {}}}}, "options": {}}]}, {"position": [0, 3000], "blocks": [{"opcode": "define custom block", "inputs": {}, "options": {"noScreenRefresh": ["value", true], "customOpcode": ["value", "P_reset (self)"], "blockType": ["value", "textReporter"]}}, {"opcode": "set runtime var (VARIABLE) to (VALUE)", "inputs": {"VARIABLE": {"text": "self"}, "VALUE": {"block": {"opcode": "value of text [ARGUMENT]", "inputs": {}, "options": {"ARGUMENT": ["value", "self"]}}}}, "options": {}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "program_counter"}, "value": {"block": {"opcode": "(NUM) to number", "inputs": {"NUM": {"text": "1111110011100010"}}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}, "comment": {"position": [400, 3000], "size": [200, 80], "isMinimized": false, "text": "0xFCE2"}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "stack_pointer"}, "value": {"block": {"opcode": "(NUM) to number", "inputs": {"NUM": {"text": "000111111101"}}, "options": {}}}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}, "comment": {"position": [400, 3100], "size": [200, 80], "isMinimized": false, "text": " 0x01FD"}}, {"opcode": "call custom block", "inputs": {"var": {"text": "self"}, "key": {"text": "instructions"}, "value": {"text": "0"}}, "options": {"customOpcode": ["value", "set (var). (key)to (value)"]}}]}], "comments": [], "currentCostume": 0, "costumes": [], "sounds": [], "volume": 100, "layerOrder": 1, "visible": true, "position": [0, 0], "size": 100, "direction": 90, "draggable": true, "rotationStyle": "all around", "localVariables": [], "localLists": []}], "globalVariables": [{"name": "ADDRESSING", "currentValue": "", "isCloudVariable": false}, {"name": "OPCODES", "currentValue": "", "isCloudVariable": false}, {"name": "BYTEORDER", "currentValue": "", "isCloudVariable": false}, {"name": "PAGE_WRAPPING_BUG", "currentValue": "", "isCloudVariable": false}], "globalLists": [], "monitors": [], "extensions": ["jgJSON", "lmsTempVars2", "Bitwise"], "extensionURLs": {"Bitwise": "https://extensions.turbowarp.org/bitwise.js"}}